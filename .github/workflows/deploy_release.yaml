#a git hub action to deploy to repository 'releases' sections
name: ShellScriptUtils - deploy release
run-name: Deploying a release
on:
  push:
    tags:
      - 'v*'

jobs: 
  prepare-release:
    name: Deploy release
    runs-on: ubuntu-22.04
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          #check if sudo is installed
          if ! [ -x "$(command -v sudo)" ]; then
            echo "sudo is not installed. Installing sudo..."
            apt update -y > /dev/null 2>&1
            apt install sudo -y
            sudo apt update -y
            sudo apt install -y bc
          fi          
          sudo apt update -y
          sudo apt install -y bc

      - name: Running tests
        run: |
          echo "Running tests..."
          cd tests
          chmod +x ./runtests.sh
          ./runtests.sh

      - name: saving files to a tar.gz
        #run tar -czf, excluding .git and .github folders
        run: |
          currentFolderName=${PWD##*/}
          currFolder=$(pwd)
          ls -lha
          cd ..
          ls -lha
          echo "coping files for a new folder"
          echo "reponame: $currentFolderName"
          echo "destination-filename: ShellScriptUtils-${{ github.ref_name }}"
          cp -r "$currentFolderName" ShellScriptUtils-${{ github.ref_name }}
          rm -rf ShellScriptUtils-${{ github.ref_name }}/.git
          rm -rf ShellScriptUtils-${{ github.ref_name }}/.github
          rm -rf ShellScriptUtils-${{ github.ref_name }}/.gitignore
          
          echo "Packing the folder ShellScriptUtils-${{ github.ref_name }}  (excluding .githuba and .git folders) ..."
          tar -czf ShellScriptUtils-${{ github.ref_name }}.tar.gz ShellScriptUtils-${{ github.ref_name }}
          
          mv ShellScriptUtils-${{ github.ref_name }}.tar.gz $currFolder/
          cd $currFolder
          ls -lha

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body_path: CHANGELOG.md

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./ShellScriptUtils-${{ github.ref_name }}.tar.gz
          asset_name: ShellScriptUtils-${{ github.ref_name }}.tar.gz
          asset_content_type: application/x-gzip